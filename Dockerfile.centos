FROM centos:7

ARG LC_ALL=en_US.UTF-8
ARG LANG=en_US.UTF-8
ARG LANGUAGE=en_US.UTF-8

ARG DEVENV_USER=root
ARG DEVENV_UID=0
ARG DEVENV_GROUP=""
ARG DEVENV_GID=""

ENV USER $DEVENV_USER
ENV HOME /$DEVENV_USER
ENV CONTRAIL $HOME/contrail
ENV LC_ALL=$LC_ALL
ENV LANG=$LANG
ENV LANGUAGE=$LANGUAGE
ENV DPDK_BUILD_DIR=$HOME/dpdk

WORKDIR $CONTRAIL

# Inject repositories that we might need
COPY *.repo /etc/yum.repos.d/

# NOTE: we have to remove /usr/local/bin/virtualenv after installing tox by python3 because it has python3 as shebang and masked
# /usr/bin/virtualenv with python2 shebang. it can be removed later when all code will be ready for python3
RUN if ! yum info jq ; then yum -y install epel-release ; fi && \
    yum -y update && \
    yum -y install python36 || (yum -y install python34 && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.4 1) && \
    yum -y install autoconf automake createrepo docker-client docker-python gcc gdb git git-review jq libtool \
                   make python-devel python-pip python-lxml rpm-build vim wget yum-utils redhat-lsb-core \
                   rpmdevtools sudo gcc-c++ net-tools httpd \
                   python-virtualenv python-future python-tox \
                   google-chrome-stable numactl-devel && \
    yum clean all && \
    rm -rf /var/cache/yum && \
    pip3 install --retries=10 --timeout 200 --upgrade tox setuptools lxml jinja2 && \
    rm -f /usr/local/bin/virtualenv && \
    if [[ "$DEVENV_USER" != 'root' ]] ; then \
        groupadd --gid $DEVENV_GID $DEVENV_GROUP && \
        useradd -md $HOME --uid $DEVENV_UID --gid $DEVENV_GID $DEVENV_USER && \
        echo '%wheel        ALL=(ALL)       NOPASSWD: ALL' >> /etc/sudoers && \
        usermod -aG wheel $DEVENV_USER && \
        chown -R $DEVENV_UID:$DEVENV_GID $HOME || exit 1; \
    fi && \
    git clone http://dpdk.org/git/dpdk-stable $HOME/dpdk-src && \
    cd $HOME/dpdk-src && git checkout v18.05.1 && \
    sed -i -e 's/CONFIG_RTE_PKTMBUF_HEADROOM=128/CONFIG_RTE_PKTMBUF_HEADROOM=256/g' config/common_base && \
    sed -i -e 's/CONFIG_RTE_PORT_STATS_COLLECT=n/CONFIG_RTE_PORT_STATS_COLLECT=y/g' config/common_base && \
    sed -i -e 's/CONFIG_RTE_EAL_IGB_UIO=y/CONFIG_RTE_EAL_IGB_UIO=n/g' config/common_linuxapp && \
    sed -i -e 's/CONFIG_RTE_KNI_KMOD=y/CONFIG_RTE_KNI_KMOD=n/g' config/common_linuxapp && \
    sed -i -e 's/CONFIG_RTE_MACHINE="native"/CONFIG_RTE_MACHINE="snb"/g' config/defconfig_x86_64-native-linuxapp-gcc && \
    make EXTRA_CFLAGS="-O3 -g" ARCH=x86_64 O=$DPDK_BUILD_DIR config T=x86_64-native-linuxapp-gcc && \
    make EXTRA_CFLAGS="-O3 -g" ARCH=x86_64 O=$DPDK_BUILD_DIR && \
    cd $HOME && rm -rf $HOME/dpdk-src

ADD entrypoint.sh /

USER $DEVENV_USER

RUN echo export CONTRAIL=$CONTRAIL >> $HOME/.bashrc && \
    echo export LD_LIBRARY_PATH=$CONTRAIL/build/lib >> $HOME/.bashrc

ENTRYPOINT ["/entrypoint.sh"]
